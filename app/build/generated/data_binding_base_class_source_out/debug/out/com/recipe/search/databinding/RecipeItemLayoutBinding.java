// Generated by view binder compiler. Do not edit!
package com.recipe.search.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.recipe.search.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class RecipeItemLayoutBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ImageView ivRecipeImage;

  @NonNull
  public final TextView tvPublisher;

  @NonNull
  public final TextView tvPublisherLink;

  @NonNull
  public final TextView tvRecipeId;

  @NonNull
  public final TextView tvRecipeTitle;

  @NonNull
  public final TextView tvSocialRank;

  @NonNull
  public final TextView tvSourceUrl;

  private RecipeItemLayoutBinding(@NonNull LinearLayout rootView, @NonNull ImageView ivRecipeImage,
      @NonNull TextView tvPublisher, @NonNull TextView tvPublisherLink,
      @NonNull TextView tvRecipeId, @NonNull TextView tvRecipeTitle, @NonNull TextView tvSocialRank,
      @NonNull TextView tvSourceUrl) {
    this.rootView = rootView;
    this.ivRecipeImage = ivRecipeImage;
    this.tvPublisher = tvPublisher;
    this.tvPublisherLink = tvPublisherLink;
    this.tvRecipeId = tvRecipeId;
    this.tvRecipeTitle = tvRecipeTitle;
    this.tvSocialRank = tvSocialRank;
    this.tvSourceUrl = tvSourceUrl;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static RecipeItemLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static RecipeItemLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.recipe__item_layout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static RecipeItemLayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.iv_recipe_image;
      ImageView ivRecipeImage = ViewBindings.findChildViewById(rootView, id);
      if (ivRecipeImage == null) {
        break missingId;
      }

      id = R.id.tv_publisher;
      TextView tvPublisher = ViewBindings.findChildViewById(rootView, id);
      if (tvPublisher == null) {
        break missingId;
      }

      id = R.id.tv_publisher_link;
      TextView tvPublisherLink = ViewBindings.findChildViewById(rootView, id);
      if (tvPublisherLink == null) {
        break missingId;
      }

      id = R.id.tv_recipe_id;
      TextView tvRecipeId = ViewBindings.findChildViewById(rootView, id);
      if (tvRecipeId == null) {
        break missingId;
      }

      id = R.id.tv_recipe_title;
      TextView tvRecipeTitle = ViewBindings.findChildViewById(rootView, id);
      if (tvRecipeTitle == null) {
        break missingId;
      }

      id = R.id.tv_social_rank;
      TextView tvSocialRank = ViewBindings.findChildViewById(rootView, id);
      if (tvSocialRank == null) {
        break missingId;
      }

      id = R.id.tv_source_url;
      TextView tvSourceUrl = ViewBindings.findChildViewById(rootView, id);
      if (tvSourceUrl == null) {
        break missingId;
      }

      return new RecipeItemLayoutBinding((LinearLayout) rootView, ivRecipeImage, tvPublisher,
          tvPublisherLink, tvRecipeId, tvRecipeTitle, tvSocialRank, tvSourceUrl);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
