// Generated by view binder compiler. Do not edit!
package com.recipe.search.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatButton;
import androidx.appcompat.widget.AppCompatTextView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.airbnb.lottie.LottieAnimationView;
import com.recipe.search.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DialogErrorBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final LottieAnimationView animationView;

  @NonNull
  public final AppCompatButton btnNegative;

  @NonNull
  public final AppCompatButton btnPositive;

  @NonNull
  public final LinearLayout root;

  @NonNull
  public final AppCompatTextView tvMessage;

  @NonNull
  public final TextView tvTitle;

  private DialogErrorBinding(@NonNull LinearLayout rootView,
      @NonNull LottieAnimationView animationView, @NonNull AppCompatButton btnNegative,
      @NonNull AppCompatButton btnPositive, @NonNull LinearLayout root,
      @NonNull AppCompatTextView tvMessage, @NonNull TextView tvTitle) {
    this.rootView = rootView;
    this.animationView = animationView;
    this.btnNegative = btnNegative;
    this.btnPositive = btnPositive;
    this.root = root;
    this.tvMessage = tvMessage;
    this.tvTitle = tvTitle;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DialogErrorBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DialogErrorBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dialog_error, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DialogErrorBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.animationView;
      LottieAnimationView animationView = ViewBindings.findChildViewById(rootView, id);
      if (animationView == null) {
        break missingId;
      }

      id = R.id.btn_negative;
      AppCompatButton btnNegative = ViewBindings.findChildViewById(rootView, id);
      if (btnNegative == null) {
        break missingId;
      }

      id = R.id.btn_positive;
      AppCompatButton btnPositive = ViewBindings.findChildViewById(rootView, id);
      if (btnPositive == null) {
        break missingId;
      }

      id = R.id.root;
      LinearLayout root = ViewBindings.findChildViewById(rootView, id);
      if (root == null) {
        break missingId;
      }

      id = R.id.tv_message;
      AppCompatTextView tvMessage = ViewBindings.findChildViewById(rootView, id);
      if (tvMessage == null) {
        break missingId;
      }

      id = R.id.tv_title;
      TextView tvTitle = ViewBindings.findChildViewById(rootView, id);
      if (tvTitle == null) {
        break missingId;
      }

      return new DialogErrorBinding((LinearLayout) rootView, animationView, btnNegative,
          btnPositive, root, tvMessage, tvTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
